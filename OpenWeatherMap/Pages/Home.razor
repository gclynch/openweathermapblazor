@page "/"

<PageTitle>Home</PageTitle>

@inject HttpClient Http
@using System.Runtime.Serialization;


<h3>Latest Weather</h3>

@if (data == null)
{
    <p><em>Loading data...</em></p>
}
else
{
    <div>
        <label for="city">City</label>
        <input id="city" @bind="city" />
        <p></p>
    </div>
    <div>
        <button @onclick="Lookup">Lookup</button>
    </div>
    <br />
    @if (found)
    {
        <div>
            Description: @data.weather[0].description
        </div>
        <div>
            Temperature(C): @(data.main.temp - 273.15)
        </div>
        <div>
            Feels like(C):  @(data.main.feels_like - 273.5)
        </div>
        <div>
            Humidity(%): @(data.main.humidity)
        </div>
        <div>
            Wind Speed:  @(data.wind.speed) km/h
        </div>
    }

}
@errormessage


@code {
    private String city = "Navan";
    private bool found = false;

    private Root data;                      // JSON
    private string errormessage;

    // lifecycle method
    private async Task GetWeatherAsync()
    {
        try
        {
            string uri = "https://api.openweathermap.org/data/2.5/weather?q=" + city + "&appid=32bba11ff58f40d065c257bcd0d4304c";
            // CORS needs to be enabled on API, caveat: do not configure https in template
            data = await Http.GetFromJsonAsync<Root>(uri);
            found = true;
            errormessage = String.Empty;

            // e.g. https://api.openweathermap.org/data/2.5/weather?q=Navan&appid=32bba11ff58f40d065c257bcd0d4304c
        }
        catch (Exception e)
        {
            found = false;
            errormessage = e.Message;
        }
    }

    // lifecycle method
    protected override async Task OnInitializedAsync()
    {
        await GetWeatherAsync();
    }


    // lookup
    public async void Lookup()
    {
        await GetWeatherAsync();
        StateHasChanged();                      // update UI
    }

    // auto generated from JSON snippets
    // https://json2csharp.com/

    public class Coord
    {
        public double lon { get; set; }
        public double lat { get; set; }
    }

    public class Weather
    {
        public int id { get; set; }
        public string main { get; set; }
        public string description { get; set; }
        public string icon { get; set; }
    }

    public class Main
    {
        public double temp { get; set; }
        public double feels_like { get; set; }
        public double temp_min { get; set; }
        public double temp_max { get; set; }
        public int pressure { get; set; }
        public int humidity { get; set; }
    }

    public class Wind
    {
        public double speed { get; set; }
        public int deg { get; set; }
    }

    public class Clouds
    {
        public int all { get; set; }
    }

    public class Sys
    {
        public int type { get; set; }
        public int id { get; set; }
        public double message { get; set; }
        public string country { get; set; }
        public int sunrise { get; set; }
        public int sunset { get; set; }
    }

    public class Root
    {
        public Coord coord { get; set; }
        public List<Weather> weather { get; set; }

        [DataMember(Name = "base")]                                     // base is reserved word in C#
        public string base1 { get; set; }

        public Main main { get; set; }
        public int visibility { get; set; }
        public Wind wind { get; set; }
        public Clouds clouds { get; set; }
        public int dt { get; set; }
        public Sys sys { get; set; }
        public int timezone { get; set; }
        public int id { get; set; }
        public string name { get; set; }
        public int cod { get; set; }
    }
}







